{"version":3,"sources":["contexts/ProviderContext.js","components/Table.js","components/Input.js","contexts/ProviderGlobal.js","components/InputNumber.js","App.js","index.js"],"names":["ProviderContext","createContext","Table","useContext","api","name","filtro","filterByName","filter","obj","includes","map","objf","key","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","Input","setFiltro","placeholder","type","onChange","target","value","data-testid","ProviderGlobal","children","useState","column","comparison","filtroNumber","setFiltroNumber","setApi","columnsOption","setColumnsOption","values","onClickButton","filtraNumber","Number","item","requestApi","a","fetch","response","json","data","results","useEffect","Provider","InputNumber","inputValue","setinputValue","handleChangeNumber","previousD","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67b2ddd5.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst ProviderContext = createContext();\n\nexport default ProviderContext;\n","import React, { useContext } from 'react';\nimport ProviderContext from '../contexts/ProviderContext';\n\nexport default function Table() {\n  // aqui ele desistrutura por isso na hora de passar tem que passar um objeto ou array\n  const { api, filtro } = useContext(ProviderContext);\n  const { filterByName: { name } } = filtro;\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>URL</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n\n          api.filter((obj) => obj.name.includes(name))\n            .map((objf) => (\n              <tr key={ objf.name }>\n                <td>{objf.name}</td>\n                <td>{objf.rotation_period}</td>\n                <td>{objf.orbital_period}</td>\n                <td>{objf.diameter}</td>\n                <td>{objf.climate}</td>\n                <td>{objf.gravity}</td>\n                <td>{objf.terrain}</td>\n                <td>{objf.surface_water}</td>\n                <td>{objf.population}</td>\n                <td>{objf.films}</td>\n                <td>{objf.created}</td>\n                <td>{objf.edited}</td>\n                <td>{objf.url}</td>\n              </tr>\n            ))\n\n        }\n      </tbody>\n    </table>\n  );\n}\n","import React, { useContext } from 'react';\nimport ProviderContext from '../contexts/ProviderContext';\n\nexport default function Input() {\n  const { setFiltro } = useContext(ProviderContext);\n\n  const handleChange = ({ target }) => {\n    setFiltro({ filterByName: { name: target.value } });\n  };\n\n  return (\n    <input\n      placeholder=\"Filtro\"\n      type=\"text\"\n      onChange={ handleChange }\n      data-testid=\"name-filter\"\n    />\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProviderContext from './ProviderContext';\n\nconst ProviderGlobal = ({ children }) => {\n  // o ProviderGlobal gerencia tudo que vai ser passado para o createcontext onde ele para o children(input e table)\n  /*\n  <ProviderGlobal provedor>\n    <ProviderContext conteudo_provido>\n      <Input recebem />\n      <Table recebem />\n    <ProviderContext>\n  <ProviderGlobal>\n  */\n  const [filtro, setFiltro] = useState({ filterByName: { name: '' } });\n  const [filtroNumber, setFiltroNumber] = useState({\n    column: 'population', comparison: 'maior que', value: '0' });\n  const [api, setApi] = useState([]);\n  const [columnsOption, setColumnsOption] = useState(['population', 'orbital_period',\n    'diameter', 'rotation_period', 'surface_water']);\n\n  // usei o repositorio do Bruno Miranda para saber como fazer a verificação de maior que ...\n  // Source: https://github.com/tryber/sd-015-a-project-starwars-planets-search/pull/109/commits/ef2c76c68688e118fc465f177595bb5653cdbcf9\n\n  const onClickButton = () => {\n    const { column, comparison, value } = filtroNumber;\n    const filtraNumber = api.filter((obj) => {\n      switch (comparison) {\n      case 'maior que':\n        return (obj[column] > Number(value));\n      case 'menor que':\n        return (obj[column] < Number(value));\n      case 'igual a':\n        return (obj[column] === value);\n      default:\n        return (obj[column] === value);\n      }\n    });\n    setApi(filtraNumber);\n    setColumnsOption(columnsOption.filter((item) => item !== column));\n  };\n\n  const values = {\n    filtro,\n    api,\n    setFiltro,\n    setFiltroNumber,\n    onClickButton,\n    columnsOption,\n  };\n\n  const requestApi = async () => {\n    const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const response = await fetch(url);\n    const data = await response.json();\n    setApi(data.results);\n  };\n\n  useEffect(() => {\n    requestApi();\n  }, []);\n\n  // usei o repositorio do Bruno Miranda para entender essa ṕarte\n  // Source: https://github.com/tryber/sd-015-a-project-starwars-planets-search/pull/109/commits/05ac94ef4168477a08e5c3e22eefed0bbe72658e\n  return (\n    <ProviderContext.Provider value={ values }>\n      {children}\n    </ProviderContext.Provider>\n  );\n};\n\nProviderGlobal.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default ProviderGlobal;\n","import React, { useContext, useState } from 'react';\nimport ProviderContext from '../contexts/ProviderContext';\n\nexport default function InputNumber() {\n  const { onClickButton, setFiltroNumber, columnsOption } = useContext(ProviderContext);\n  const [inputValue, setinputValue] = useState(0);\n\n  const handleChangeInputNumber = ({ target: { value, name } }) => {\n    setinputValue(value);\n    setFiltroNumber((previousD) => ({ ...previousD, [name]: value }));\n  };\n\n  const handleChangeNumber = ({ target: { value, name } }) => {\n    setFiltroNumber((previousD) => ({ ...previousD, [name]: value }));\n  };\n\n  return (\n    <>\n      <select data-testid=\"column-filter\" name=\"column\" onChange={ handleChangeNumber }>\n        {\n          columnsOption.map((item) => (\n            <option key={ item } value={ item }>{ item }</option>\n          ))\n        }\n      </select>\n      <select\n        data-testid=\"comparison-filter\"\n        name=\"comparison\"\n        onChange={ handleChangeNumber }\n      >\n        <option value=\"maior que\">maior que</option>\n        <option value=\"menor que\">menor que</option>\n        <option value=\"igual a\">igual a</option>\n      </select>\n      <input\n        type=\"number\"\n        data-testid=\"value-filter\"\n        name=\"value\"\n        value={ inputValue }\n        onChange={ handleChangeInputNumber }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ onClickButton }\n      >\n        Filtrar\n      </button>\n    </>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Input from './components/Input';\nimport ProviderGlobal from './contexts/ProviderGlobal';\nimport InputNumber from './components/InputNumber';\n\nfunction App() {\n  return (\n    <ProviderGlobal>\n      <Input />\n      <InputNumber />\n      <Table />\n    </ProviderGlobal>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}